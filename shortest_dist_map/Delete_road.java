
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.StringTokenizer;
import javax.swing.JOptionPane;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Delete_road.java
 *
 * Created on Apr 1, 2013, 10:15:37 PM
 */
/**
 *
 * @author Daniel
 */
public class Delete_road extends javax.swing.JFrame {
     ArrayList<Edge> edges = new ArrayList<Edge>();
    /** Creates new form Delete_road */
    public Delete_road() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        delete = new javax.swing.JButton();
        cancel = new javax.swing.JButton();
        log_out = new javax.swing.JButton();
        road_name = new javax.swing.JTextField();
        from_node = new javax.swing.JTextField();
        to_node = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Delete road/street");

        jLabel2.setText("Road's name:");

        jLabel3.setText("From point:");

        jLabel4.setText("To point : ");

        delete.setText("Delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        cancel.setText("cancel");
        cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelActionPerformed(evt);
            }
        });

        log_out.setText("log out");
        log_out.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                log_outActionPerformed(evt);
            }
        });

        from_node.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                from_nodeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(38, 38, 38)
                                .addComponent(delete)
                                .addGap(51, 51, 51))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4))
                                .addGap(40, 40, 40)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(to_node, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(road_name, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 89, Short.MAX_VALUE)
                            .addComponent(cancel, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(from_node, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(29, 29, 29)
                        .addComponent(log_out))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(137, 137, 137)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(165, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(road_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(from_node, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(to_node, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(delete)
                    .addComponent(cancel)
                    .addComponent(log_out))
                .addContainerGap(52, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void from_nodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_from_nodeActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_from_nodeActionPerformed

private void cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelActionPerformed
         this.setVisible(false);
         new manager_form().setVisible(true);
    // TODO add your handling code here:
}//GEN-LAST:event_cancelActionPerformed

private void log_outActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_log_outActionPerformed
         this.setVisible(false);
         new user_form().setVisible(true);
    // TODO add your handling code here:
}//GEN-LAST:event_log_outActionPerformed

private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
     // TODO add your handling code here: 
    //*******************************************************************************************
                BufferedReader  fin_t;		

		try
		{
		    // Open an input stream
		    fin_t = new BufferedReader (new FileReader("Edge.txt"));
                  
                    
                    while(fin_t.ready()){
		    //System.out.println( fin2.readLine());
                       String text4 = fin_t.readLine();
                StringTokenizer tokenizer2 = new StringTokenizer(text4," ");
                String title1 = tokenizer2.nextToken();
                String nodename = tokenizer2.nextToken();
                String title2 = tokenizer2.nextToken();
                String fromnode = tokenizer2.nextToken();
                //------------
                String title3 = tokenizer2.nextToken();
                String tonode = tokenizer2.nextToken();
                String title4 = tokenizer2.nextToken();
                Double h = Double.parseDouble(tokenizer2.nextToken());
                //JOptionPane.
                Node n1 = new Node(fromnode);
                Node n2 = new Node(tonode);
                Edge e  = new Edge(nodename,n1,n2,h);
                
                  edges.add(e);  
		}
                    fin_t.close();
                }
		// Catches any error conditions
		catch (IOException e)
		{
	         System.err.println ("Edges are empty");
			//System.exit(-1);
		} 
     for(int i = 0; i<edges.size();i++){
      
         if(edges.get(i).getEdge_name().equals(road_name.getText())
                 &&edges.get(i).getFrom_node().toString().equals(from_node.getText())
                 &&edges.get(i).getTo_node().toString().equals(to_node.getText()))
         {
             edges.remove(i);
         }
         else{
            JOptionPane.showMessageDialog(null, "Cannot delete road:::"+"please double check information of road's delete\n");
             
         }
     }
     //***************************************************************************************************************
     //update the file back
     //***************************************************************************************
                   try
                {
                        // Create a new file output stream
                        // connected to "profile.txt"
                       PrintWriter out_t = new PrintWriter("Edge.txt");

                        // Connect print stream to the output stream
                       // p = new PrintStream( out );
		        for(int i= 0;i<edges.size();i++){
                          out_t.println(edges.get(i).toString());  
                          //System.out.println (customer_list.get(i).toString());
                        }
                       // out.println(u1.toString());

                        out_t.close();
                }
                    catch (Exception e)
                {
                        System.err.println ("Error writing to file");
                }
     //****************************************************************************************
                   this.setVisible(false);
                   new manager_form().setVisible(true);
    //****************************************************************************************               
}//GEN-LAST:event_deleteActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancel;
    private javax.swing.JButton delete;
    private javax.swing.JTextField from_node;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JButton log_out;
    private javax.swing.JTextField road_name;
    private javax.swing.JTextField to_node;
    // End of variables declaration//GEN-END:variables
}
